/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package store;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author null
 */
public class SupplierUpdate extends SupplierNew {

    /**
     * Creates new form SupplierUpdate
     */
    public SupplierUpdate(java.awt.Frame parent, boolean modal, UserModel user, SupplierModel supplier) throws Exception {
        super(parent, modal, user);
        initComponents();
        setSupplier(supplier);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit");
        setPreferredSize(new java.awt.Dimension(980, 675));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 421, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        updateIntefaceSelf();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    SupplierUpdate dialog = new SupplierUpdate(new javax.swing.JFrame(), true, null, null);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(SupplierUpdate.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private void updateIntefaceSelf() {

        getjButtonSupplierAdd().setText("edit");
        toggleBranchPanel(getjPanel1(), true);

        getjTextFieldSupplierName().setText(getSupplier().getName());
        getjTextFieldSupplierEmail().setText(getSupplier().getEmail());
        getjTextFieldSupplierPhone().setText(getSupplier().getPhone());

        ArrayList<BranchModel> branches = BranchController.getAllBranch(getSupplier());
        setBranchTableModel(new BranchTableModel(branches));
        getSupplier().setBranchList(branches);
        getjTableBranch().setModel(getBranchTableModel());
        refershBranchTable();
    }

    public void aSupplierAdd() {
        String name = getjTextFieldSupplierName().getText();
        String phone = getjTextFieldSupplierPhone().getText();
        String email = getjTextFieldSupplierEmail().getText();
        getSupplier().setName(name);
        getSupplier().setPhone(phone);
        getSupplier().setEmail(email);

        SupplierController.setUpdate(Operation.UPDATE, getSupplier());
        getSupplierList().add(getSupplier());

        setClosed(true);//if want exit with supplier only, no branches

        //setBranchTableModel(new BranchTableModel(new ArrayList<BranchModel>()));
        getjTableBranch().setModel(getBranchTableModel());

        toggleBranchPanel(getjPanel2(), true);

    }

}
