/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package store;

import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;

/**
 *
 * @author nUll
 */
public class OrderView extends BaseView implements IAction {

    private JTable table;
    private OrderTableModel orderTableModel;
    private OrderModel order;

    /**
     * Creates new form OrderFrame
     */
    public OrderView(UserModel user) throws Exception {
        super(user);
        initComponents();
        updateInterfacceSelf();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setTitle("order");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new OrderView(null).setVisible(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void jButtonInsertAction(ActionEvent evt) {
        try {
            OrderNew orderNew = new OrderNew(this, rootPaneCheckingEnabled, user);
            orderNew.setVisible(true);
            if (orderNew.isClosed()) {
                ArrayList<OrderModel> oList = orderNew.getoList();
                for (OrderModel order : oList) {
                    orderTableModel.addRow(order);

                }
            }
            refreshTable();
        } catch (Exception ex) {
            Logger.getLogger(OrderView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void jButtonUpdateAction(ActionEvent evt) {

    }

    @Override
    public void jButtonDeleteAction(ActionEvent evt) {
        int[] rows = table.getSelectedRows();
        for (int row : rows) {
            OrderController.setUpdate(Operation.DELETE, orderTableModel.getRow(row));
        }
        orderTableModel.removeRowFrom(rows.length);
        refreshTable();
    }

    @Override
    public File aExport() {
        return null;
    }

    @Override
    public void aInsertText() {
        aChangedText();
    }

    @Override
    public void aRemovedText() {
        aChangedText();
    }

    @Override
    public void aChangedText() {
        String pattern = getTextSearch().getText();
        if (pattern == "") {
            table.setModel(orderTableModel);
            refreshTable();

        } else {
            ArrayList<OrderModel> orders = OrderController.getAllOrderByLike(pattern);
            OrderTableModel newOrderTableModel = new OrderTableModel(orders);
            table.setModel(newOrderTableModel);
        }
        refreshTable();

    }

    private void updateInterfacceSelf() {
        table = getTable();
        ArrayList<OrderModel> orders = OrderController.getAllOrder();
        orderTableModel = new OrderTableModel(orders);
        table.setModel(orderTableModel);
        refreshTable();
    }

    private void refreshTable() {
        table.revalidate();
    }
}
